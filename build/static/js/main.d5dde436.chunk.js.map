{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","person","axios","post","then","response","data","get","id","delete","newPerson","persons","personToUpdate","find","n","name","toLowerCase","updatedPerson","number","put","Persons","deleter","filteredList","map","onClick","PersonFilter","filter","handling","value","onChange","PersonForm","addNew","newName","newNumber","handleChange","handleNumberChange","onSubmit","type","Notification","message","console","log","error","notificationStyle","color","fontWeight","fontSize","backgroundColor","border","borderRadius","padding","style","text","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","service","includes","event","target","preventDefault","window","confirm","returnedPerson","catch","personToRemove","setTimeout","alert","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5dde436.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst uploadNew = person => {\r\n    return axios.post(baseUrl,person).then(response => response.data)\r\n    }\r\n\r\nconst getAll = () => {\r\n    return axios\r\n    .get(baseUrl)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst deleter = id => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (newPerson, persons) => {\r\n    const personToUpdate = persons.find(n=>n.name.toLowerCase() === newPerson.name.toLowerCase())\r\n    const updatedPerson = { ...personToUpdate, number:newPerson.number}\r\n    return axios.put(`${baseUrl}/${updatedPerson.id}`,updatedPerson).then(response=>response.data)\r\n}\r\n\r\n  export default {\r\n      uploadNew, getAll, deleter, updateNumber\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport service from './services/phonebook'\r\n\r\nconst Persons = ({ persons, deleter, filteredList }) => {\r\n\r\n    return (\r\n    <ul>\r\n    {filteredList.map((person => <li key={person.name} >{person.name} {person.number}\r\n    <button onClick={() => deleter(person)}>delete</button></li>))}\r\n    </ul>\r\n    )}\r\n\r\nconst PersonFilter = ({ filter, handling }) => \r\n  <div>\r\n    Filter: <input value={filter} onChange={handling} />\r\n  </div>\r\n  \r\nconst PersonForm = ({ addNew, newName, newNumber, handleChange, handleNumberChange }) => {\r\n  return (\r\n        <form onSubmit={addNew}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  console.log(message.error);\r\n  const notificationStyle = {\r\n    color: message.error? 'red' : 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    backgroundColor: 'gainsboro',\r\n    border: message.error? '3px solid red' : '3px solid green',\r\n    borderRadius: '5px',\r\n    padding: '15px'\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [errorMessage,setErrorMessage] = useState(null)\r\n\r\n  const hook = () => {\r\n    service.getAll().then(data => {\r\n      setPersons(data)\r\n    })\r\n  }\r\n  useEffect(hook, [])\r\n\r\n  const includesName = name => persons.find(person => person.name.toLowerCase() === name.toLowerCase())\r\n\r\n  const deleter = (person) => {\r\n    console.log(person.id)\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      console.log('deleting ' + person.name)\r\n      service.deleter(person.id).then(() => {\r\n        setPersons(persons.filter(p => p.id !== person.id))\r\n      })\r\n    }\r\n  }\r\n\r\n  const addNew = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {name:newName, number:newNumber}\r\n    if (includesName(newName)) {\r\n    if (window.confirm(`${newName} is already added to phonebook\r\n    :). Replace number?`)) {\r\n      service.updateNumber(newPerson,persons).then(returnedPerson =>\r\n        setPersons(persons.map(person => person.id !== returnedPerson.id?\r\n          person\r\n          :returnedPerson )))\r\n          .then(setNewName(''))\r\n          .then(setNewNumber(''))\r\n          .catch(error => {\r\n            setErrorMessage({text:`${newName} is already removed from server`, error:true})\r\n            const personToRemove = persons.find(n=>n.name.toLowerCase() === newPerson.name.toLowerCase())\r\n            setPersons(persons.filter(person => person.id !== personToRemove.id))\r\n          })\r\n          .then(setErrorMessage({text:`Updated ${newPerson.name}`, error:false}))\r\n      .then(setTimeout(() => {\r\n        setErrorMessage(null)\r\n      },5000))\r\n      \r\n          \r\n    } else {\r\n      window.alert('person not replaced')\r\n    }\r\n    } else {\r\n      service.uploadNew(newPerson).then(data => {\r\n      setPersons(persons.concat(data))\r\n      setNewName('')\r\n      setNewNumber('')\r\n      })\r\n      .then(setErrorMessage({text:`Added ${newPerson.name}`, error:false}))\r\n      .then(setTimeout(() => {\r\n        setErrorMessage(null)\r\n      },5000))\r\n    }\r\n  }\r\n\r\n  //const filtered = persons.filter(person => \r\n   // person.name.toLowerCase().includes(filter.toLowerCase())) \r\n\r\n  const handleChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n\r\n  const filterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n  console.log('filteredlist'+persons)\r\n\r\n  const filteredList = persons.filter(person => \r\n    person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} />\r\n<br/>\r\n      <PersonFilter filter={filter} handling={filterChange}/>\r\n    \r\n      <h3>Add new</h3>\r\n\r\n      <PersonForm addNew={addNew} newName={newName} newNumber={newNumber}\r\n      handleChange={handleChange} handleNumberChange={handleNumberChange} /> \r\n      \r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} deleter={deleter} filteredList={filteredList}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}